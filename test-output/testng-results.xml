<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-10T16:21:34 IST" name="Suite" finished-at="2023-07-10T16:23:03 IST" duration-ms="89096">
    <groups>
    </groups>
    <test started-at="2023-07-10T16:21:34 IST" name="Test" finished-at="2023-07-10T16:23:03 IST" duration-ms="89096">
      <class name="dnata.DnataInsurance">
        <test-method signature="dnataInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:dnata.DnataInsurance@21e360a]" started-at="2023-07-10T16:21:35 IST" name="dnataInsurance" data-provider="getexceldata" finished-at="2023-07-10T16:23:02 IST" duration-ms="87405" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test Insurance 4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Positive]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Verify Individual Insurance with Book Now(Fulfilment)functionality]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mo]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[//aceuat.dnata.com/backoffice/loginggn.aspx]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[dt]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Shekhar]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Shekhar@123]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Thrilok Nadha Rachapalli]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[BusinessTravel]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Dependent]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[dxb]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Dubai, United Arab Emirates - All Airports (DXB)]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[mus]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Muscat, Oman - Seeb (MCT)]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[20-February-2024]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[21-February-202]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[Family]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[14-May-2019]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[FOP - Cash]]>
              </value>
            </param>
            <param index="21">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="22">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="23">
              <value>
                <![CDATA[dxb]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[Dubai, United Arab Emirates - All Airports (DXB)]]>
              </value>
            </param>
            <param index="25">
              <value>
                <![CDATA[mus]]>
              </value>
            </param>
            <param index="26">
              <value>
                <![CDATA[Muscat, Oman - Seeb (MCT)]]>
              </value>
            </param>
            <param index="27">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="28">
              <value>
                <![CDATA[22-Mar-2023]]>
              </value>
            </param>
            <param index="29">
              <value>
                <![CDATA[24-Mar-2023]]>
              </value>
            </param>
            <param index="30">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="31">
              <value>
                <![CDATA[Individual]]>
              </value>
            </param>
            <param index="32">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="33">
              <value>
                <![CDATA[20-Aug-2018]]>
              </value>
            </param>
            <param index="34">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="35">
              <value>
                <![CDATA[FOP - Cash]]>
              </value>
            </param>
            <param index="36">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="37">
              <value>
                <![CDATA[Airspace Close,Business Cover,Golf Sports Cover]]>
              </value>
            </param>
            <param index="38">
              <value>
                <![CDATA[Book Now]]>
              </value>
            </param>
            <param index="39">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="40">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="41">
              <value>
                <![CDATA[Fulfilment]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid date provided 21-February-202 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid date provided 21-February-202 expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at dnata.DnataTripType.selectDateInCalendarInsurance(DnataTripType.java:1047)
at dnata.DnataTripType.InsuranceTriptype(DnataTripType.java:363)
at dnata.DnataInsurance.dnataInsurance(DnataInsurance.java:128)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dnataInsurance -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:dnata.DnataInsurance@21e360a]" started-at="2023-07-10T16:23:02 IST" name="afterMethod" finished-at="2023-07-10T16:23:03 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- dnata.DnataInsurance -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
